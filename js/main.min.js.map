{"version":3,"sources":["main.js"],"names":["Generator","canvas","undefined","ctx","lat","lon","place","deg","Math","random","init","_this","this","document","getElementById","getContext","getLocation","$","ajax","url","dataType","type","error","jqXHR","textStatus","errorThrown","console","log","success","data","unescoData","QUERYRESULT","DATA","unescoObj","floor","length","getFlickr","response","loadFlickrImage","flickrPhotos","photos","photo","flickrObj","flickrUrl","append","bg","onload","drawBg","drawImage","drawGlobie","globie","rotate","html","saveImage","urlToData","callback","outputFormat","img","Image","crossOrigin","dataURL","createElement","height","width","toDataURL","src","jQuery","ready"],"mappings":"AAGAA,WACEC,OAAQC,OACRC,IAAKD,OACLE,IAAKF,OACLG,IAAKH,OACLI,MAAOJ,OACPK,IAAqB,KAAhBC,KAAKC,SAA0B,GAEpCC,KAAM,WACJ,GAAIC,GAAQC,IAEZD,GAAMV,OAASY,SAASC,eAAe,aACvCH,EAAMR,IAAMQ,EAAMV,OAAOc,WAAW,MACpCJ,EAAMK,eAIRA,YAAa,WACX,GAAIL,GAAQC,IAEZK,GAAEC,MACAC,IAAK,cACLC,SAAU,OACVC,KAAM,MACNC,MAAO,SAASC,EAAOC,EAAYC,GACjCC,QAAQC,IAAI,QAASJ,GACrBG,QAAQC,IAAI,aAAcH,GAC1BE,QAAQC,IAAI,cAAeF,IAE7BG,QAAS,SAASC,GAChB,GAAIC,GAAaD,EAAKE,YAAYC,KAC9BC,EAAYzB,KAAK0B,MAAM1B,KAAKC,UAAYqB,EAAWK,OAAS,GAChExB,GAAMP,IAAM0B,EAAWG,GAAW,GAClCtB,EAAMN,IAAMyB,EAAWG,GAAW,GAClCtB,EAAML,MAAQwB,EAAWG,GAAW,GAEpCtB,EAAMyB,gBAMZA,UAAW,WACT,GAAIzB,GAAQC,IAEZK,GAAEC,MACAC,IAAK,kHAGKR,EAAMP,IAChB,QAAUO,EAAMN,IAChB,2CAGAe,SAAU,QACVC,KAAM,MACNC,MAAO,SAASC,EAAOC,EAAYC,GACjCC,QAAQC,IAAI,QAASJ,GACrBG,QAAQC,IAAI,aAAcH,GAC1BE,QAAQC,IAAI,cAAeF,IAE7BG,QAAS,SAASS,GAChBX,QAAQC,IAAI,kBAAmBU,GAE/B1B,EAAM2B,gBAAgBD,OAM5BC,gBAAiB,SAASD,GACxB,GAAI1B,GAAQC,KACR2B,EAAeF,EAASG,OAAOC,KAEnC,IAAqB,cAAjBF,EAA8B,CAChC,GAAIG,GAAYlC,KAAK0B,MAAM1B,KAAKC,UAAY8B,EAAaJ,OAAS,IAC9DQ,EAAYJ,EAAaG,GAAkB,KAE/CzB,GAAE,QAAQ2B,OAAO,qBAAuBD,EAAY,MAEpDhC,EAAMkC,GAAKhC,SAASC,eAAe,MACnCH,EAAMkC,GAAGC,OAAS,WAChBpB,QAAQC,IAAI,qBACZhB,EAAMoC,cAGRpC,GAAMyB,aAKVW,OAAQ,WACN,GAAIpC,GAAQC,IAEZD,GAAMR,IAAI6C,UAAUrC,EAAMkC,GAAI,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,IAAM,KAC1DlC,EAAMsC,WAAWtC,EAAMJ,MAIzB0C,WAAY,WACV,GAAItC,GAAQC,KACRsC,EAASrC,SAASC,eAAe,SAErCH,GAAMR,IAAIgD,OAAOxC,EAAMJ,KACvBI,EAAMR,IAAI6C,UAAUE,EAAQ,EAAG,IAAK,IAAK,KAEzCjC,EAAE,YAAYmC,KAAK,iBAAmBzC,EAAML,OAE5CK,EAAM0C,aAIRA,UAAW,aAUXC,UAAW,SAASnC,EAAKoC,EAAUC,GACjC,GAAIC,GAAM,GAAIC,MAEdD,GAAIE,YAAc,YAClBF,EAAIX,OAAS,WACX,GAEIc,GAFA3D,EAASY,SAASgD,cAAc,aAChC1D,EAAMF,EAAOc,WAAW,KAG5Bd,GAAO6D,OAASlD,KAAKkD,OACrB7D,EAAO8D,MAAQnD,KAAKmD,MACpB5D,EAAI6C,UAAUpC,KAAM,EAAG,GACvBgD,EAAU3D,EAAO+D,UAAUR,GAC3BD,EAASK,GACT3D,EAAS,MAGXwD,EAAIQ,IAAM9C,IAKd+C,OAAOrD,UAAUsD,MAAM,WACrB,YAEAnE,WAAUU","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global jQuery, $, document, Generator, Modernizr */\n\nGenerator = {\n  canvas: undefined,\n  ctx: undefined,\n  lat: undefined,\n  lon: undefined,\n  place: undefined,\n  deg: Math.random() * (-0.3 - 0.3) + 0.3,\n\n  init: function() {\n    var _this = this;\n\n    _this.canvas = document.getElementById('generator');\n    _this.ctx = _this.canvas.getContext('2d');\n    _this.getLocation();\n\n  },\n\n  getLocation: function() {\n    var _this = this;\n\n    $.ajax({\n      url: 'unesco.json',\n      dataType: 'json',\n      type: 'GET',\n      error: function(jqXHR, textStatus, errorThrown) {\n        console.log('jqXHR', jqXHR);\n        console.log('textStatus', textStatus);\n        console.log('errorThrown', errorThrown);\n      },\n      success: function(data) {\n        var unescoData = data.QUERYRESULT.DATA;\n        var unescoObj = Math.floor(Math.random() * (unescoData.length + 1));\n        _this.lat = unescoData[unescoObj][0];\n        _this.lon = unescoData[unescoObj][1];\n        _this.place = unescoData[unescoObj][5];\n\n        _this.getFlickr();\n      }\n    });\n\n  },\n\n  getFlickr: function() {\n    var _this = this;\n\n    $.ajax({\n      url: 'https://api.flickr.com/services/rest/?' +\n      'method=flickr.photos.search' +\n      '&api_key=731a3dc1069a15969d725a3805acc530' +\n      '&lat=' + _this.lat +\n      '&lon=' + _this.lon +\n      '&extras=url_l' +\n      '&format=json' +\n      '&jsoncallback=?',\n      dataType: 'jsonp',\n      type: 'GET',\n      error: function(jqXHR, textStatus, errorThrown) {\n        console.log('jqXHR', jqXHR);\n        console.log('textStatus', textStatus);\n        console.log('errorThrown', errorThrown);\n      },\n      success: function(response) {\n        console.log('Flickr Response', response);\n\n        _this.loadFlickrImage(response);\n      }\n    });\n\n  },\n\n  loadFlickrImage: function(response) {\n    var _this = this;\n    var flickrPhotos = response.photos.photo;\n\n    if (flickrPhotos !== 'undefined') {\n      var flickrObj = Math.floor(Math.random() * (flickrPhotos.length + 1));\n      var flickrUrl = flickrPhotos[flickrObj]['url_l'];\n\n      $('body').append('<img id=\"bg\" src=\"' + flickrUrl + '\">');\n\n      _this.bg = document.getElementById('bg');\n      _this.bg.onload = function() {\n        console.log('background loaded');\n        _this.drawBg();\n      };\n    } else {\n      _this.getFlickr();\n    }\n\n  },\n\n  drawBg: function() {\n    var _this = this;\n\n    _this.ctx.drawImage(_this.bg, 0, 0, 600, 600, 0, 0, 1000, 1000);\n    _this.drawGlobie(_this.deg);\n\n  },\n\n  drawGlobie: function() {\n    var _this = this;\n    var globie = document.getElementById('globie');\n\n    _this.ctx.rotate(_this.deg);\n    _this.ctx.drawImage(globie, 0, 200, 700, 700);\n\n    $('#caption').html('Globie visits ' + _this.place);\n\n    _this.saveImage();\n\n  },\n\n  saveImage: function() {\n    var _this = this;\n\n/*\n    var canvasData = _this.canvas.toDataURL('image/png');\n    console.log('canvasData has data. You need to save this into an img element');\n*/\n\n  },\n\n  urlToData: function(url, callback, outputFormat) {\n    var img = new Image();\n\n    img.crossOrigin = 'Anonymous';\n    img.onload = function(){\n      var canvas = document.createElement('converter');\n      var ctx = canvas.getContext('2d');\n      var dataURL;\n\n      canvas.height = this.height;\n      canvas.width = this.width;\n      ctx.drawImage(this, 0, 0);\n      dataURL = canvas.toDataURL(outputFormat);\n      callback(dataURL);\n      canvas = null;\n    };\n\n    img.src = url;\n}\n\n};\n\njQuery(document).ready(function () {\n  'use strict';\n\n  Generator.init();\n\n});"],"sourceRoot":"/source/"}